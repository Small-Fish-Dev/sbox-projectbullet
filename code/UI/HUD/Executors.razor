@using ProjectBullet.Core
@using ProjectBullet.Player
@using Sandbox
@namespace ProjectBullet.UI.HUD
@inherits Sandbox.UI.Panel;

<style>
    Executors {
        position: absolute;
        bottom: 10px;
        right: 10px;
        
        min-width: 250px;
        min-height: 100px;
        
        flex-direction: column-reverse;
    }
</style>

@code {
    private bool CanUseEditor { get; set; } = false;
    private int LocalMoney { get; set; } = 0;

    private static string EditorKey => Input.GetButtonOrigin(InputButton.View);
    private static string SmallMessage => EditorKey == "" ? "please bind the View button" : $"press {EditorKey} to open the workshop";
    private static BasePlayer LocalBasePlayer => Game.LocalPawn as BasePlayer;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (firstTime)
        {
            CanUseEditor = LocalBasePlayer.CanUseEditor;
            LocalMoney = LocalBasePlayer.Inventory.Money;
        }
    }

    [Events.Client.Workshop.EditorAccessChanged]
    public void OnEditorAccessChanged(bool value)
    {
        CanUseEditor = value;
        StateHasChanged();
    }

    [Events.Client.Workshop.MoneyChanged]
    public void OnMoneyChanged(int value)
    {
        LocalMoney = value;
        StateHasChanged();
    }

    public override void Tick()
    {
        base.Tick();
        
        
    }

}

<root>
    @foreach (var nodeExecutor in LocalBasePlayer.NodeExecutors)
    {
        <Executor NodeExecutor=@nodeExecutor/>
    }
</root>