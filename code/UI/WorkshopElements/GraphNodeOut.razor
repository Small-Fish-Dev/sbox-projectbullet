@using Sandbox.UI;
@inherits Sandbox.UI.Panel
@namespace ProjectBullet.UI.WorkshopElements

<style>
    GraphNodeOut {
        flex-grow: 0;
        border-radius: 50%;
        border: #ececec 3px solid;
        background-color: #000000;
    
        justify-content: center;
        align-items: center;
        font-size: 15px;
        font-weight: bold;
        
        padding: 7px;
    
        &:hover {
            background-color: #ececec;
            color: black;
        }
    
        &.connected {
            background-color: #ffffff;
            color: black;
        }
    
        &.linking {
            background-color: #ececec;
            color: black;
        }
        
        label {
            pointer-events: none;
        }
    }
</style>

<root class="@ClassString"></root>

@code {

    public GraphController.Connector Connector { get; set; }
    
    public bool IsConnected => Connector.IsConnected;
    public bool IsLinking;
    
    private string ClassString
    {
        get
        {
            var output = "";
            if (IsConnected)
            {
                output += "connected ";
            }
            
            if (IsLinking)
            {
                output += "linking ";
            }

            return output;
        }
    }
    
    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (firstTime)
        {
            Connector.Element = this;
        }
    }

    public override void Delete(bool immediate = false)
    {
        Connector.Element = null;

        base.Delete(immediate);
    }

    protected override void OnRightClick(MousePanelEvent e)
    {
        base.OnRightClick(e);

        if (Connector.IsConnected)
        {
            Connector.Disconnect();
        }

        e.StopPropagation();
    }

}