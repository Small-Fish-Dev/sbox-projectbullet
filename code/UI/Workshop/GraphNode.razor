@using Sandbox
@using Sandbox.UI;
@namespace ProjectBullet.UI.Workshop
@inherits Sandbox.UI.Panel
@attribute [StyleSheet("/UI/Editor/GraphNode.scss")]

<root>
    <div class="header">
        <div class="title-container">
            <div class="title" style="text-align: left">@Data.DisplayName</div>
        </div>
        <div class="title-container energy">
            @if (Data.Instance != null)
            {
                <div class="title" style="text-align: center">⚡@Data.Instance.EnergyUsage</div>
            }
        </div>
    </div>
    <div class="content">
        <div style="right: 25px; width: 50px" class="handle-container">
            @if (Data is not GraphController.EntryNode)
            {
                <GraphNodeIn Node=@this/>
            }
        </div>

        <div style="left: 15px;" class="handle-container">
            @foreach (var connector in Data.Connectors)
            {
                <div class="output">
                    <div class="center-text-container">
                        ⚡@(connector.LastEstimatedEnergyOutput ?? 0.0f)
                    </div>
                    <div style="padding-left: 3px; padding-right: 3px">-</div>
                    <div class="center-text-container">
                        @connector.DisplayName
                    </div>
                    <div style="width: 3px"/>
                    <GraphNodeOut style="width: 30px" Connector=@connector/>
                </div>
            }
        </div>
    </div>
</root>

@code {

    public GraphController.Node Data { get; set; }
    public GraphVisualizer Visualizer { get; set; }
    private static float RootScaleFromScreen => Game.RootPanel.ScaleFromScreen;

    public GraphNode(GraphController.Node controllerNode, GraphVisualizer visualizer)
    {
        Data = controllerNode;
        Data.Element = this;
        Visualizer = visualizer;
    }

    protected override void OnRightClick(MousePanelEvent e)
    {
        base.OnRightClick(e);
        Data.Root.RemoveFromGraph(Data);
    }

    public void SetScreenPosition(Vector2 position)
    {
        Style.Left = Length.Pixels(position.x * RootScaleFromScreen); // set panel position!
        Style.Top = Length.Pixels(position.y * RootScaleFromScreen);
    }

}